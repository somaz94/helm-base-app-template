# Default values for base-aws.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1
# version: 6b7ccc64

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: 0102312312431.dkr.ecr.eu-central-1.amazonaws.com/somaz/game
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 80
  targetPort: 8080

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  className: "alb"  # 또는 사용 중인 ingress controller
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    # Ingress Group - 하나의 ALB 공유
    alb.ingress.kubernetes.io/group.name: somaz-shared-alb
    alb.ingress.kubernetes.io/group.order: "10"
    # External DNS
    external-dns.prod.kubernetes.io/hostname: prod-game.somaz.somaz.link
    # ALB 추가 설정
    alb.ingress.kubernetes.io/load-balancer-name: somaz-shared-alb-loadbalancer
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
    alb.ingress.kubernetes.io/ssl-redirect: "443"
    # ACM 인증서 설정
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:eu-central-1:0102312312431:certificate/14fsadkla-sdfdsfdsf-dsfadsfds-fdsfasdfds # fix
  hosts:
    - host: prod-game.somaz.somaz.link
      paths:
        - path: /
          pathType: Prefix

revisionHistoryLimit: 1

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # prod 테스트 환경 - 100명 동시 접속자, 2 replica 기준
  # limits:
  #   cpu: 1000m      # 1 CPU core
  #   memory: 2Gi     # 2GB RAM
  # requests:
  #   cpu: 100m       # 0.5 CPU core
  #   memory: 1Gi     # 1GB RAM

strategy:
  enabled: false
  config:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1 # Maximum number of pods that can be created above the desired number of pods
      maxUnavailable: "50%" # Maximum number of unavailable pods during the update

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
# livenessProbe: {}
livenessProbe:
  httpGet:
    path: /health
    port: http
# readinessProbe: {}
readinessProbe:
  httpGet:
    path: /health
    port: http

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

rbac:
  enabled: false

nodeSelector: {}
  # eks.amazonaws.com/nodegroup: TestNodegroupBaseNodeGroupA-O1fZAmuND3P3

tolerations: []

affinity: {}

envConfig: {}
  # NODE_ENV: base

configs:
  enabled: false
  items:
    - name: prod-game-app-config
      datas:
        NODE_ENV: prod
        SERVER_PORT: 8080

        # pub/sup Redis
        REDIS_DB_HOST: prod-somaz-redis.somaz.svc.cluster.local
        REDIS_DB_PORT: 6379
        REDIS_DB_NUMBER: 0

        # Session Redis
        REDDIS_SESSION_DB_HOST: somaz-redis-cluster-client.somaz.svc.cluster.local
        REDDIS_SESSION_DB_PORT: 6379
        REDDIS_SESSION_DB_NUMBER: 0
        REDDIS_SESSION_DB_IS_CLUSTER_MODE: true

        # User Level Lock redis
        USER_LEVEL_LOCK_ENABLED: true
        REDIS_RED_LOCK_DB_HOST: somaz-redis-cluster-client.somaz.svc.cluster.local
        REDIS_RED_LOCK_DB_PORT: 6379
        REDIS_RED_LOCK_DB_NUMBER: 0
        REDIS_RED_LOCK_DB_IS_CLUSTER_MODE: true

        COMMON_DB_TYPE: mysql
        COMMON_DB_HOST: prod-somaz-rds-aurora.cluster-caquexxxxxxxx.eu-central-1.rds.amazonaws.com
        # COMMON_DB_HOST: fantome-cluster.somaz.us
        COMMON_DB_PORT: 3306
        # COMMON_DB_PORT: 30636
        COMMON_DB_NAME: common
        COMMON_DB_DATABASE: prod_common
        COMMON_DB_USER: projectm
        COMMON_DB_PASSWORD: somaz123!
        GAME_DB_TYPE: mysql
        GAME_DB_HOST: prod-somaz-rds-aurora.cluster-caquexxxxxxxx.eu-central-1.rds.amazonaws.com
        # GAME_DB_HOST: fantome-cluster.somaz.us
        GAME_DB_PORT: 3306
        # GAME_DB_PORT: 30636
        GAME_DB_NAME: game
        GAME_DB_DATABASE: prod_game
        GAME_DB_USER: projectm
        GAME_DB_PASSWORD: somaz123!
        CHECK_VERSION: false
        CHECK_REQUEST_SEQUENCE: false
        BATTLE_SERVER_URL: http://prod-somaz-battle.somaz.svc.cluster.local # <svc.name>.<namespace>.svc.<cluster_dns> 현재 cluster dns = cluster.local

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

# EFS 관련 설정
efs:
  persistentVolumes:
    enabled: false
    # items:
    #   - name: "prod-somaz-game-app-data-pv"
    #     fileSystemId: "fs-0d52bedsafkdjsalkfjds"
    #     accessPointId: "fsap-046adsfsdafsdaf"  # Terraform으로 생성된 Access Point ID
    #     storage: "5Gi"
    #     volumeMode: Filesystem
    #     accessModes:
    #       - ReadWriteMany
    #     reclaimPolicy: Retain
    #     storageClassName: "efs-sc"
    #   - name: "prod-somaz-game-app-logs-pv"
    #     fileSystemId: "fs-0d52bedsafkdjsalkfjds"
    #     accessPointId: "fsap-0bfsadfasdfsdaf"  # Terraform으로 생성된 Access Point ID
    #     storage: "5Gi"
    #     volumeMode: Filesystem
    #     accessModes:
    #       - ReadWriteMany
    #     reclaimPolicy: Retain
    #     storageClassName: "efs-sc"
    #   - name: "prod-somaz-game-app-version-pv"
    #     fileSystemId: "fs-0d52bedsafkdjsalkfjds"
    #     accessPointId: "fsap-04asdfsdafsdafsdafd"  # Terraform으로 생성된 Access Point ID
    #     storage: "5Gi"
    #     volumeMode: Filesystem
    #     accessModes:
    #       - ReadWriteMany
    #     reclaimPolicy: Retain
    #     storageClassName: "efs-sc"

  persistentVolumeClaims:
    enabled: false
    # items:
    #   - name: "prod-somaz-game-app-data-pvc"
    #     accessModes:
    #       - ReadWriteMany
    #     storageClassName: "efs-sc"
    #     storage: "5Gi"
    #     mountPath: "/app/data"
    #     selector:
    #       volumeName: "prod-somaz-game-app-data-pv"
    #   - name: "prod-somaz-game-app-logs-pvc"
    #     accessModes:
    #       - ReadWriteMany
    #     storageClassName: "efs-sc"
    #     storage: "5Gi"
    #     mountPath: "/app/logs"
    #     selector:
    #       volumeName: "prod-somaz-game-app-logs-pv"
    #   - name: "prod-somaz-game-app-version-pvc"
    #     accessModes:
    #       - ReadWriteMany
    #     storageClassName: "efs-sc"
    #     storage: "5Gi"
    #     mountPath: "/app/version"
    #     selector:
    #       volumeName: "prod-somaz-game-app-version-pv"
