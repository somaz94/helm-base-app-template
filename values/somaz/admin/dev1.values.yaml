# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1
version: "44c37ad0"
# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: harbor.somaz.link/somaz/admin
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "44c37ad0"

imageCredentials:
  enabled: true
  registry: https://harbor.somaz.link
  username: robot$gitlab
  password: 8xxxxxxxxxxxxxxxxxxxIxxxx
  name: harbor-robot-secret

# This is for the secretes for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: 
  - name: harbor-robot-secret
# This is to override the chart name.
nameOverride: ""
fullnameOverride: "dev1-somaz-admin"

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 80
  targetPort: 3000

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: true
  className: "nginx"
  annotations: 
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "false"   # Disable SSL redirection
    nginx.ingress.kubernetes.io/ssl-passthrough: "false"      # Disable SSL passthrough
  hosts:
    - host: dev1-admin.pm.somaz.link
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/

revisionHistoryLimit: 1

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
# livenessProbe: {}
livenessProbe: 
  httpGet:
    path: /health
    port: http 
# readinessProbe: {}
readinessProbe:
  httpGet:
    path: /health
    port: http

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

rbac:
  enabled: false

nodeSelector: {}

tolerations: []

affinity: {}

envConfig: {}
  # NODE_ENV: base

configs:
  enabled: true
  items:
    - name: dev1-admin-app-config
      datas:
        NODE_ENV: dev1
        SERVER_PORT: 3000
        REDIS_DB_HOST: dev1-cluster.somaz.link
        REDIS_DB_PORT: 30479
        COMMON_DB_TYPE: mysql
        COMMON_DB_HOST: dev1-cluster.somaz.link
        COMMON_DB_PORT: 30636
        COMMON_DB_NAME: common
        COMMON_DB_DATABASE: dev1_common
        COMMON_DB_USER: somaz
        COMMON_DB_PASSWORD: somaz123!

persistentVolumes:
  enabled: true
  items:
    - name: dev1-somaz-admin-app-data-pv
      storage: 5Gi
      volumeMode: Filesystem
      accessModes:
        - ReadWriteMany
      reclaimPolicy: Retain
      storageClassName: nfs-client-nopath
      path: /volume1/nfs/somaz/dev1/server/data
      server: 10.10.10.5
    - name: dev1-somaz-admin-app-version-pv
      storage: 5Gi
      volumeMode: Filesystem
      accessModes:
        - ReadWriteMany
      reclaimPolicy: Retain
      storageClassName: nfs-client-nopath
      path: /volume1/nfs/somaz/dev1/server/version
      server: 10.10.10.5

persistentVolumeClaims:
  enabled: true
  items:
    - name: dev1-somaz-admin-app-data-pvc
      accessModes:
        - ReadWriteMany
      storageClassName: nfs-client-nopath
      storage: 5Gi
      mountPath: /app/data
      selector:
        volumeName: dev1-somaz-admin-app-data-pv
    - name: dev1-somaz-admin-app-version-pvc
      accessModes:
        - ReadWriteMany
      storageClassName: nfs-client-nopath
      storage: 5Gi
      mountPath: /app/version
      selector:
        volumeName: dev1-somaz-admin-app-version-pv

# Extra volumes to add to the deployment
extraVolumes: []

# Extra volume mounts to add to the container
extraVolumeMounts: []

# AWS
certificate:
  enabled: false
  
certCleanup:
  enabled: false



